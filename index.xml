<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>佛系程序员</title>
    <link>https://ronggle.com/</link>
    <description>Recent content on 佛系程序员</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 08 Mar 2019 11:27:29 +0800</lastBuildDate>
    
	<atom:link href="https://ronggle.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>图形数据库简单介绍</title>
      <link>https://ronggle.com/2019/03/graph-db-getting-and-started/</link>
      <pubDate>Fri, 08 Mar 2019 11:27:29 +0800</pubDate>
      
      <guid>https://ronggle.com/2019/03/graph-db-getting-and-started/</guid>
      <description>关系型数据库 关系数据库，是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。现实世界中的各种实体以及实体之间的各种联系均用关系模型来表示。关系模型是由埃德加·科德于1970年首先提出的，并配合“科德十二定律”。现如今虽然对此模型有一些批评意见，但它还是数据存储的传统标准。标准数据查询语言SQL就是一种基于关系数据库的语言，这种语言执行对关系数据库中数据的检索和操作。 关系模型由关系数据结构、关系操作集合、关系完整性约束三部分组成。
简单说，关系型数据库是由多张能互相联接的二维行列表格组成的数据库。
NoSQL NoSQL(Not Only SQL)，泛指非关系型的数据库。
随着互联网Web2.0网站的兴起，传统的关系数据库在应付Web2.0网站，特别是超大规模和高并发的SNS类型的Web2.0纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。NoSQL数据库的产生就是为了解决大规模数据集合多重数据种类带来的挑战，尤其是大数据应用难题。
NoSQL数据库的四大分类:
 KV数据库 图型数据库 文档型数据库 列存储数据库  今天我们要说的，便是图形数据库。
图形数据库 图形数据库是NoSQL数据库的一种类型，它应用图形理论存储实体之间的关系信息。图形数据库是一种非关系型数据库，它应用图形理论存储实体之间的关系信息。最常见例子就是社会网络中人与人之间的关系。关系型数据库用于存储“关系型”数据的效果并不好，其查询复杂、缓慢、超出预期，而图形数据库的独特设计恰恰弥补了这个缺陷。
和其他以列、行或者KV等形式存储数据的数据库不同，图形数据库以节点（Node）和边（Edge）的网络存储所有信息。边表示那些代表对象的节点之间的联系。因为边和节点都可以被描述为对象，开发者可以为其指定属性（Attribute，或者 property）。为边增加方向最终会创建一个属性图，它代表图形数据库中的明确结构。
我们为什么需要图形数据库？ 图形数据库可以通过使用操作、所有权和父项关系等来表示实体之间的关联关系。如果实体间的连接或关系是您正在尝试建模的数据的核心，那就适合使用图形数据库。因此，图形数据库对于建模和查询社交网络、推荐引擎、知识图谱、驾驶方向 (路线查找)、业务关系、依赖关系、货物移动等类似项目非常有用。
社交网络 适合采用图形的常见使用案例的一个示例就是社交网络数据。 推荐引擎 可以在图形数据库中存储客户兴趣、好友和购买历史等信息类别之间的关系。然后，快速查询它以提出个性化和相关的建议。例如，可以使用高度可用的图形数据库，根据关注相同运动内容且具有类似购买历史记录的其他人购买的产品，向用户提供产品推荐。或者，可以识别有共同好友但还不认识对方的人员，然后提供好友推荐。
知识图谱 利用知识图形，您可以将信息存储在图形模型中，并可以使用图形查询帮助用户更轻松地导航高度关联的数据集。例如，如果用户对 Leonardo da Vinci 创作的 Mona Lisa 感兴趣，您可以帮助他们发现同一艺术家的其他艺术作品或发现在卢浮宫展览的其他作品。 利用知识图谱，您可以将主题信息添加到产品目录，构建和查询复杂的监管规则模型，或者进行一般信息建模 (如维基数据)。
Neo4j Neo4j是世界领先的图形数据库。 它是一个高性能的图形存储，具有成熟和强大的数据库所需的所有功能，如友好的查询语言和ACID事务。 程序员使用灵活的节点和关系网络结构而不是静态表 - 但享受企业级数据库的所有好处。 对于许多应用程序，与关系数据库相比，Neo4j提供了数量级的性能优势。
安装 老样子，我依旧会适用Docker来进行安装。
$ docker run -d \ --name neo4j \ -p 7474:7474 -p 7687:7687 \ -v $HOME/neo4j/data:/data \ -v $HOME/neo4j/logs:/logs \ neo4j  实例 添加依赖 dependencies { compile(&amp;quot;org.</description>
    </item>
    
    <item>
      <title>Traefik on Kubernetes</title>
      <link>https://ronggle.com/2018/11/traefik-on-kubernetes/</link>
      <pubDate>Sat, 10 Nov 2018 21:34:29 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/11/traefik-on-kubernetes/</guid>
      <description>&lt;p&gt;之前同事问我在Kubernetes上使用，他按照Traefik文档上的部署，不能使用。后面我自己把我整理的配置发给他，成功在Kubernetes上部署，记录下，方便遇到同样疑问的朋友，大神请略过。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用gRPC开发微服务-服务注册与发现</title>
      <link>https://ronggle.com/2018/08/registry-microservies-via-grpc/</link>
      <pubDate>Sun, 12 Aug 2018 20:04:08 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/08/registry-microservies-via-grpc/</guid>
      <description>&lt;p&gt;谈到微服务，就不免会提及服务注册，我们上一节中已经实现了gRPC的服务开发，以及客户端开发，在我们的客户端中，我们调用服务端时，需要指定服务端的IP，端口等信息，而在我们的编排系统中，我们的IP是不固定的，所以我们需要通过服务的发现，自己去发现服务端的配置。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用gRPC开发微服务-开始</title>
      <link>https://ronggle.com/2018/08/setup-microservies-via-grpc/</link>
      <pubDate>Sun, 12 Aug 2018 17:44:33 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/08/setup-microservies-via-grpc/</guid>
      <description>&lt;h2 id=&#34;什么是grpc&#34;&gt;什么是gRPC&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://grpc.io/&#34;&gt;gRPC&lt;/a&gt;是一个现代的开源高性能RPC框架，可以在任何环境中运行。它可以有效地连接数据中心内和跨数据中心的服务，并提供可插拔的支持，以实现负载平衡，跟踪，健康检查和身份验证。它支持多种语言。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>开启Traefik的https</title>
      <link>https://ronggle.com/2018/07/traefik-https/</link>
      <pubDate>Thu, 26 Jul 2018 22:42:22 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/07/traefik-https/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;https://ronggle.com/2018/05/cloud-labs/&#34;&gt;使用Docker打造自己的云平台&lt;/a&gt;中我们有提到&lt;strong&gt;Traefik&lt;/strong&gt;，并对其进行了简单的使用，后面在使用的过程中，需要使用https，所以也对traefik自动从&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;获取证书进行了验证与使用，所以在此记录下验证的过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2B小姐姐</title>
      <link>https://ronggle.com/2018/05/love-2b-miss/</link>
      <pubDate>Thu, 17 May 2018 21:08:52 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/05/love-2b-miss/</guid>
      <description>&lt;p&gt;2B是游戏《尼尔：机械纪元》中的可操作角色，全称：ヨルハ2号B型。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Docker打造自己的云平台</title>
      <link>https://ronggle.com/2018/05/cloud-labs/</link>
      <pubDate>Sun, 13 May 2018 18:00:59 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/05/cloud-labs/</guid>
      <description>&lt;p&gt;失踪人口回归，经过几个月的失踪，我又终于回归正轨了，前面没有更博客，主要原因是，因为我实在是太忙（懒）了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>consul学习二-集群</title>
      <link>https://ronggle.com/2018/01/consul-cluster/</link>
      <pubDate>Mon, 15 Jan 2018 21:42:19 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/01/consul-cluster/</guid>
      <description>&lt;p&gt;在前面我们已经介绍了&lt;a href=&#34;https://ronggle.com/2018/01/07/consul-first-time/&#34;&gt;什么是Consul&lt;/a&gt;，接下来，我们将介绍下怎么搭建一个集群。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>consul学习一-初见</title>
      <link>https://ronggle.com/2018/01/consul-first-time/</link>
      <pubDate>Sun, 07 Jan 2018 19:38:00 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/01/consul-first-time/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.consul.io&#34;&gt;Consul&lt;/a&gt;&lt;/strong&gt;是HashiCorp公司推出的一款开源工具，用于实现分布式系统的服务发现与配置&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2018年计划</title>
      <link>https://ronggle.com/2018/01/2018-technology-plan/</link>
      <pubDate>Thu, 04 Jan 2018 21:48:48 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/01/2018-technology-plan/</guid>
      <description>&lt;p&gt;弹指间，2017又浪费了，2018伊始，该做好计划，规划下自己的一年了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Easy Mock 试玩</title>
      <link>https://ronggle.com/2017/09/easy-mock-getting-and-started/</link>
      <pubDate>Sun, 03 Sep 2017 12:38:11 +0800</pubDate>
      
      <guid>https://ronggle.com/2017/09/easy-mock-getting-and-started/</guid>
      <description>&lt;p&gt;在过去的开发模式中，或许是一群人坐在一起，风风火火的一起码一个项目，大家在一起，口头沟通交流，并不太涉及到跨团队间的数据调用，基本上涉及的API也是不断沟通修改。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fedora 桌面系统体验</title>
      <link>https://ronggle.com/2017/08/fedora/</link>
      <pubDate>Thu, 03 Aug 2017 21:39:17 +0800</pubDate>
      
      <guid>https://ronggle.com/2017/08/fedora/</guid>
      <description>&lt;p&gt;最开始安装Linux操作系统，那是三四年前了，那时候还在大学，当时安装了Debian，完了一段时间后为了耍游戏，还是换回了Windows。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一场王者农药引发的思考</title>
      <link>https://ronggle.com/2017/07/a-game-of-thinking/</link>
      <pubDate>Sat, 29 Jul 2017 17:37:14 +0800</pubDate>
      
      <guid>https://ronggle.com/2017/07/a-game-of-thinking/</guid>
      <description>&lt;p&gt;最近手游届，王者农药应该算是比较火爆的了。当然，我也是其中的一名中毒者。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>什么是Zipkin</title>
      <link>https://ronggle.com/2017/07/what-is-zipkin/</link>
      <pubDate>Sat, 22 Jul 2017 23:30:22 +0800</pubDate>
      
      <guid>https://ronggle.com/2017/07/what-is-zipkin/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Zipkin&lt;/strong&gt;是一个分布式跟踪系统。 它有助于收集在微服务架构中排除延迟问题所需的时间数据。 它管理这些数据的收集和查找。 Zipkin是基于Google Dapper论文设计的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微服务、容器与容器云-从入门到放弃</title>
      <link>https://ronggle.com/2017/05/microservice-container-and-container-cloud/</link>
      <pubDate>Mon, 22 May 2017 21:26:33 +0800</pubDate>
      
      <guid>https://ronggle.com/2017/05/microservice-container-and-container-cloud/</guid>
      <description>&lt;p&gt;驱动技术的，从来都不应该是技术，也不是情怀，应该是不断变化的诉求。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WebService学习记录</title>
      <link>https://ronggle.com/2017/02/webservice-hello-world/</link>
      <pubDate>Sun, 12 Feb 2017 19:32:45 +0800</pubDate>
      
      <guid>https://ronggle.com/2017/02/webservice-hello-world/</guid>
      <description>&lt;p&gt;最近项目要使用WebService，正在学习中，做个记录。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>好久不见</title>
      <link>https://ronggle.com/2015/10/it-is-been-a-long-time/</link>
      <pubDate>Sat, 24 Oct 2015 21:26:33 +0800</pubDate>
      
      <guid>https://ronggle.com/2015/10/it-is-been-a-long-time/</guid>
      <description>&lt;p&gt;1024，无偿加班中，偷个懒，继续上班&amp;hellip;..&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ronggle.com/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ronggle.com/resume/</guid>
      <description>best-resume-ever .fa { display: inline-block; font: normal normal normal 14px/1 FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } /* makes the font 33% larger relative to the icon container */ .fa-lg { font-size: 1.33333333em; line-height: 0.75em; vertical-align: -15%; } .fa-2x { font-size: 2em; } .fa-3x { font-size: 3em; } .fa-4x { font-size: 4em; } .fa-5x { font-size: 5em; } .fa-fw { width: 1.28571429em; text-align: center; } .</description>
    </item>
    
  </channel>
</rss>