<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grpc on 佛系程序员</title>
    <link>https://ronggle.com/tags/grpc/</link>
    <description>Recent content in Grpc on 佛系程序员</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 12 Aug 2018 20:04:08 +0800</lastBuildDate>
    
	<atom:link href="https://ronggle.com/tags/grpc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用gRPC开发微服务-服务注册与发现</title>
      <link>https://ronggle.com/2018/08/registry-microservies-via-grpc/</link>
      <pubDate>Sun, 12 Aug 2018 20:04:08 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/08/registry-microservies-via-grpc/</guid>
      <description>&lt;p&gt;谈到微服务，就不免会提及服务注册，我们上一节中已经实现了gRPC的服务开发，以及客户端开发，在我们的客户端中，我们调用服务端时，需要指定服务端的IP，端口等信息，而在我们的编排系统中，我们的IP是不固定的，所以我们需要通过服务的发现，自己去发现服务端的配置。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用gRPC开发微服务-开始</title>
      <link>https://ronggle.com/2018/08/setup-microservies-via-grpc/</link>
      <pubDate>Sun, 12 Aug 2018 17:44:33 +0800</pubDate>
      
      <guid>https://ronggle.com/2018/08/setup-microservies-via-grpc/</guid>
      <description>&lt;h2 id=&#34;什么是grpc&#34;&gt;什么是gRPC&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://grpc.io/&#34;&gt;gRPC&lt;/a&gt;是一个现代的开源高性能RPC框架，可以在任何环境中运行。它可以有效地连接数据中心内和跨数据中心的服务，并提供可插拔的支持，以实现负载平衡，跟踪，健康检查和身份验证。它支持多种语言。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>